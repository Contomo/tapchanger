##

[manual_stepper liftbar]
step_pin: PD11
dir_pin: PD9
enable_pin: !PD15
microsteps: 16
rotation_distance: 20
accel: 1000
velocity: 200
endstop_pin: ^PC0

[tmc5160 manual_stepper liftbar]
cs_pin: PD14
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
interpolate: True
run_current: 1.0
stealthchop_threshold: 999999

[gcode_macro LIFTBAR_HOME]
variable_homed: False
variable_home_pos: 462.5
gcode:
 {% if not printer["gcode_macro LIFTBAR_HOME"].homed %}
    MANUAL_STEPPER STEPPER=liftbar ENABLE=1 SET_POSITION=0
    MANUAL_STEPPER STEPPER=liftbar MOVE=470 SPEED=20 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=liftbar SET_POSITION={printer["gcode_macro LIFTBAR_HOME"].home_pos}
    SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=homed VALUE=True
    LIFTBAR_MOVE Z=370
 {% endif %}

[gcode_macro LIFTBAR_MOVE]
variable_position = 0
gcode:
 MANUAL_STEPPER STEPPER=liftbar MOVE={params.Z} SPEED={(params.F|float)/60.0 if 'F' in params else 200} SYNC={params.SYNC if 'SYNC' in params else 1} ACCEL=1000
 SET_GCODE_VARIABLE MACRO=LIFTBAR_MOVE VARIABLE=position VALUE={params.Z}
 
 # Moves liftbar up away from currnt print layer, if necessary
[gcode_macro LIFTBAR_LAYER_CHANGE]
 variable_clearance = 100
 gcode:
   {% set cur_z = printer.toolhead.position[2]|float %}
   {% set lbz = printer["gcode_macro LIFTBAR_MOVE"].position %}
   {% set lb_target = [ cur_z +  printer["gcode_macro LIFTBAR_CLEAR_Z"].clearance, printer["gcode_macro LIFTBAR_HOME"].home_pos ] | min %}
   {% if lbz < lb_target %} 
      LIFTBAR_MOVE Z={lb_target} SYNC=0
   {% endif %}
